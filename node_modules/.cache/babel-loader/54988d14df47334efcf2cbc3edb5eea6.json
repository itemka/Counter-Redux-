{"ast":null,"code":"import _objectSpread from \"/Users/itemka/Developer/Projects/Counter/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/itemka/Developer/Projects/Counter/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Button from \"./Components/Button/Button\";\nimport ShowNumber from \"./Components/ShowNumber/ShowNumber\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      number: 0,\n      buttons: [{\n        buttonsTitle: '+'\n      }, {\n        buttonsTitle: 'Reset'\n      }],\n      limit: {\n        limitTop: 5,\n        errorText: 'Stop',\n        errorBool: false\n      }\n    };\n\n    this.onClickPlusNumber = () => {\n      let newNumber = this.state.number;\n\n      if (newNumber === this.state.limit.limitTop) {\n        this.setState({\n          limit: _objectSpread({}, this.state.limit, {\n            errorBool: true\n          })\n        });\n      } else if (newNumber < this.state.limit.limitTop) {\n        this.setState({\n          number: newNumber + 1,\n          limit: _objectSpread({}, this.state.limit, {\n            errorBool: false\n          })\n        });\n      } else {}\n    };\n\n    this.onClickReset = () => {\n      this.setState({\n        number: 0\n      });\n    };\n\n    this.render = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(ShowNumber, {\n        limit: this.state.limit,\n        number: this.state.number,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClickButton: () => this.onClickPlusNumber(),\n        buttonsTitle: this.state.buttons[0].buttonsTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClickButton: () => this.onClickReset(),\n        buttonsTitle: this.state.buttons[1].buttonsTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    };\n  }\n\n}\n\nexport default App; // Побаловался\n// limit: {number: 0, T: 3, B: -3, error: 'Stop'}\n// onClickButton = isDone => {\n//     if (isDone) {\n//         this.state.number = this.state.limit.number;\n//\n//         if (this.state.limit.number < this.state.limit.T) {\n//             this.setState({number: this.state.number + 1});\n//             this.state.limit.number = this.state.limit.number + 1;\n//             console.log(this.state.limit.number);\n//         } else {\n//             this.setState({number: this.state.limit.error});\n//         }\n//     } else if (!isDone) {\n//         this.state.number = this.state.limit.number;\n//\n//         if (this.state.limit.number > this.state.limit.B) {\n//             this.setState({number: this.state.number - 1});\n//             this.state.limit.number = this.state.limit.number - 1;\n//             console.log(this.state.limit.number);\n//         } else {\n//             this.setState({number: this.state.limit.error});\n//         }\n//     }\n// };","map":{"version":3,"sources":["/Users/itemka/Developer/Projects/Counter/src/App.js"],"names":["React","Button","ShowNumber","App","Component","state","number","buttons","buttonsTitle","limit","limitTop","errorText","errorBool","onClickPlusNumber","newNumber","setState","onClickReset","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE9BC,KAF8B,GAEtB;AACJC,MAAAA,MAAM,EAAE,CADJ;AAEJC,MAAAA,OAAO,EAAE,CACL;AAACC,QAAAA,YAAY,EAAE;AAAf,OADK,EAEL;AAACA,QAAAA,YAAY,EAAE;AAAf,OAFK,CAFL;AAMJC,MAAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAE,CAAX;AAAcC,QAAAA,SAAS,EAAE,MAAzB;AAAiCC,QAAAA,SAAS,EAAE;AAA5C;AANH,KAFsB;;AAAA,SAW9BC,iBAX8B,GAWV,MAAM;AACtB,UAAIC,SAAS,GAAG,KAAKT,KAAL,CAAWC,MAA3B;;AACA,UAAIQ,SAAS,KAAK,KAAKT,KAAL,CAAWI,KAAX,CAAiBC,QAAnC,EAA6C;AACzC,aAAKK,QAAL,CAAc;AAACN,UAAAA,KAAK,oBAAM,KAAKJ,KAAL,CAAWI,KAAjB;AAAwBG,YAAAA,SAAS,EAAE;AAAnC;AAAN,SAAd;AACH,OAFD,MAEO,IAAIE,SAAS,GAAG,KAAKT,KAAL,CAAWI,KAAX,CAAiBC,QAAjC,EAA2C;AAC9C,aAAKK,QAAL,CAAc;AAACT,UAAAA,MAAM,EAAEQ,SAAS,GAAG,CAArB;AAAwBL,UAAAA,KAAK,oBAAM,KAAKJ,KAAL,CAAWI,KAAjB;AAAwBG,YAAAA,SAAS,EAAE;AAAnC;AAA7B,SAAd;AACH,OAFM,MAEA,CAEN;AACJ,KApB6B;;AAAA,SAsB9BI,YAtB8B,GAsBf,MAAM;AACjB,WAAKD,QAAL,CAAc;AAACT,QAAAA,MAAM,EAAE;AAAT,OAAd;AACH,KAxB6B;;AAAA,SA0B9BW,MA1B8B,GA0BrB,MAAM;AACX,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWI,KAA9B;AAAqC,QAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWC,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,aAAa,EAAE,MAAM,KAAKO,iBAAL,EAA7B;AACQ,QAAA,YAAY,EAAE,KAAKR,KAAL,CAAWE,OAAX,CAAmB,CAAnB,EAAsBC,YAD5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAII,oBAAC,MAAD;AAAQ,QAAA,aAAa,EAAE,MAAM,KAAKQ,YAAL,EAA7B;AACQ,QAAA,YAAY,EAAE,KAAKX,KAAL,CAAWE,OAAX,CAAmB,CAAnB,EAAsBC,YAD5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADJ;AASH,KApC6B;AAAA;;AAAA;;AAuClC,eAAeL,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport './App.css';\nimport Button from \"./Components/Button/Button\";\nimport ShowNumber from \"./Components/ShowNumber/ShowNumber\";\n\nclass App extends React.Component {\n\n    state = {\n        number: 0,\n        buttons: [\n            {buttonsTitle: '+'},\n            {buttonsTitle: 'Reset'},\n        ],\n        limit: {limitTop: 5, errorText: 'Stop', errorBool: false},\n    };\n\n    onClickPlusNumber = () => {\n        let newNumber = this.state.number;\n        if (newNumber === this.state.limit.limitTop) {\n            this.setState({limit: {...this.state.limit, errorBool: true}})\n        } else if (newNumber < this.state.limit.limitTop) {\n            this.setState({number: newNumber + 1, limit: {...this.state.limit, errorBool: false}})\n        } else {\n\n        }\n    };\n\n    onClickReset = () => {\n        this.setState({number: 0})\n    };\n\n    render = () => {\n        return (\n            <div>\n                <ShowNumber limit={this.state.limit} number={this.state.number}/>\n                <Button onClickButton={() => this.onClickPlusNumber()}\n                        buttonsTitle={this.state.buttons[0].buttonsTitle}/>\n                <Button onClickButton={() => this.onClickReset()}\n                        buttonsTitle={this.state.buttons[1].buttonsTitle}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n// Побаловался\n// limit: {number: 0, T: 3, B: -3, error: 'Stop'}\n// onClickButton = isDone => {\n//     if (isDone) {\n//         this.state.number = this.state.limit.number;\n//\n//         if (this.state.limit.number < this.state.limit.T) {\n//             this.setState({number: this.state.number + 1});\n//             this.state.limit.number = this.state.limit.number + 1;\n//             console.log(this.state.limit.number);\n//         } else {\n//             this.setState({number: this.state.limit.error});\n//         }\n//     } else if (!isDone) {\n//         this.state.number = this.state.limit.number;\n//\n//         if (this.state.limit.number > this.state.limit.B) {\n//             this.setState({number: this.state.number - 1});\n//             this.state.limit.number = this.state.limit.number - 1;\n//             console.log(this.state.limit.number);\n//         } else {\n//             this.setState({number: this.state.limit.error});\n//         }\n//     }\n// };"]},"metadata":{},"sourceType":"module"}