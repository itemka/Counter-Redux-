{"ast":null,"code":"import _objectSpread from \"/Users/itemka/Developer/Projects/Counter/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/itemka/Developer/Projects/Counter/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Button from \"./Components/Button/Button\";\nimport ShowNumber from \"./Components/ShowNumber/ShowNumber\";\nimport InputValue from \"./Components/InputValue/InputValue\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      number: 0,\n      buttons: [{\n        id: 1,\n        buttonsTitle: '+'\n      }, {\n        id: 2,\n        buttonsTitle: 'Reset'\n      }],\n      limit: {\n        limitTop: 5,\n        errorColor: false,\n        errorEnd: false,\n        errorEndText: 'Stop'\n      }\n    };\n\n    this.onClickPlusNumber = () => {\n      if (this.state.number < this.state.limit.limitTop) {\n        this.setState({\n          number: this.state.number + 1,\n          limit: _objectSpread({}, this.state.limit, {\n            errorColor: false,\n            errorEnd: false\n          })\n        });\n      } else if (this.state.number === this.state.limit.limitTop) {\n        this.setState({\n          limit: _objectSpread({}, this.state.limit, {\n            errorColor: true,\n            errorEnd: false\n          })\n        });\n      } else if (this.state.number > this.state.limit.limitTop) {\n        this.setState({\n          limit: _objectSpread({}, this.state.limit, {\n            errorColor: false,\n            errorEnd: true\n          })\n        });\n      }\n    };\n\n    this.onClickReset = () => {\n      this.setState({\n        number: 0,\n        limit: _objectSpread({}, this.state.limit, {\n          errorColor: false,\n          errorEnd: false\n        })\n      });\n    };\n\n    this.render = () => {\n      return React.createElement(\"div\", {\n        className: \"generalBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bloks\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"sggdgg\"), React.createElement(InputValue, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"interfaceManagement\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClickButton: () => this.onClickReset(),\n        buttonsTitle: this.state.buttons[1].buttonsTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"bloks\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(ShowNumber, {\n        limit: this.state.limit,\n        number: this.state.number,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"interfaceManagement\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClickButton: () => this.onClickPlusNumber(),\n        buttonsTitle: this.state.buttons[0].buttonsTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClickButton: () => this.onClickReset(),\n        buttonsTitle: this.state.buttons[1].buttonsTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })))));\n    };\n  }\n\n}\n\nexport default App; // Побаловался\n// limit: {number: 0, T: 3, B: -3, error: 'Stop'}\n// onClickButton = isDone => {\n//     if (isDone) {\n//         this.state.number = this.state.limit.number;\n//\n//         if (this.state.limit.number < this.state.limit.T) {\n//             this.setState({number: this.state.number + 1});\n//             this.state.limit.number = this.state.limit.number + 1;\n//             console.log(this.state.limit.number);\n//         } else {\n//             this.setState({number: this.state.limit.error});\n//         }\n//     } else if (!isDone) {\n//         this.state.number = this.state.limit.number;\n//\n//         if (this.state.limit.number > this.state.limit.B) {\n//             this.setState({number: this.state.number - 1});\n//             this.state.limit.number = this.state.limit.number - 1;\n//             console.log(this.state.limit.number);\n//         } else {\n//             this.setState({number: this.state.limit.error});\n//         }\n//     }\n// };","map":{"version":3,"sources":["/Users/itemka/Developer/Projects/Counter/src/App.js"],"names":["React","Button","ShowNumber","InputValue","App","Component","state","number","buttons","id","buttonsTitle","limit","limitTop","errorColor","errorEnd","errorEndText","onClickPlusNumber","setState","onClickReset","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './App.css';\nimport Button from \"./Components/Button/Button\";\nimport ShowNumber from \"./Components/ShowNumber/ShowNumber\";\nimport InputValue from \"./Components/InputValue/InputValue\";\n\nclass App extends React.Component {\n\n    state = {\n        number: 0,\n        buttons: [\n            {id: 1, buttonsTitle: '+'},\n            {id: 2, buttonsTitle: 'Reset'},\n        ],\n        limit: {\n            limitTop: 5,\n            errorColor: false,\n            errorEnd: false,\n            errorEndText: 'Stop'\n        },\n    };\n\n    onClickPlusNumber = () => {\n        if (this.state.number < this.state.limit.limitTop) {\n\n            this.setState({\n                number: this.state.number + 1,\n                limit: {...this.state.limit, errorColor: false, errorEnd: false}\n            })\n\n        } else if (this.state.number === this.state.limit.limitTop) {\n\n            this.setState({limit: {...this.state.limit, errorColor: true, errorEnd: false}})\n\n        } else if (this.state.number > this.state.limit.limitTop) {\n\n            this.setState({limit: {...this.state.limit, errorColor: false, errorEnd: true}});\n        }\n    };\n\n    onClickReset = () => {\n        this.setState({number: 0, limit: {...this.state.limit, errorColor: false, errorEnd: false}})\n    };\n\n    render = () => {\n        return (\n            <div className={`generalBlock`}>\n                <div className={`bloks`}>\n                    <div>\n                        <div className={`content`}>\n                            <div>\n                                <div>sggdgg</div><InputValue/>\n                            </div>\n                        </div>\n                        <div className={`interfaceManagement`}>\n                            <Button onClickButton={() => this.onClickReset()}\n                                    buttonsTitle={this.state.buttons[1].buttonsTitle}/>\n                        </div>\n                    </div>\n                </div>\n                <div className={`bloks`}>\n                    <div>\n                        <div className={`content`}>\n                            <div>\n                                <ShowNumber limit={this.state.limit} number={this.state.number}/>\n                            </div>\n                        </div>\n                        <div className={`interfaceManagement`}>\n                            <Button onClickButton={() => this.onClickPlusNumber()}\n                                    buttonsTitle={this.state.buttons[0].buttonsTitle}/>\n                            <Button onClickButton={() => this.onClickReset()}\n                                    buttonsTitle={this.state.buttons[1].buttonsTitle}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n// Побаловался\n// limit: {number: 0, T: 3, B: -3, error: 'Stop'}\n// onClickButton = isDone => {\n//     if (isDone) {\n//         this.state.number = this.state.limit.number;\n//\n//         if (this.state.limit.number < this.state.limit.T) {\n//             this.setState({number: this.state.number + 1});\n//             this.state.limit.number = this.state.limit.number + 1;\n//             console.log(this.state.limit.number);\n//         } else {\n//             this.setState({number: this.state.limit.error});\n//         }\n//     } else if (!isDone) {\n//         this.state.number = this.state.limit.number;\n//\n//         if (this.state.limit.number > this.state.limit.B) {\n//             this.setState({number: this.state.number - 1});\n//             this.state.limit.number = this.state.limit.number - 1;\n//             console.log(this.state.limit.number);\n//         } else {\n//             this.setState({number: this.state.limit.error});\n//         }\n//     }\n// };"]},"metadata":{},"sourceType":"module"}